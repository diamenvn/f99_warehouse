{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie'; // const query = new URLSearchParams(window.location.search);\n// let token = query.get('access_token');\n\nlet token = Cookies.get('_session') ? Cookies.get('_session') : \"\";\nlet obj;\nlet api_instance;\n\nif (token != \"\") {\n  obj = JSON.parse(token);\n  api_instance = axios.create({\n    timeout: 420000,\n    withCredentials: false,\n    headers: {\n      'Authorization': obj.access_token\n    }\n  });\n} else {\n  api_instance = axios.create({\n    timeout: 420000,\n    withCredentials: false\n  });\n} //Create a Http Client using Axios. Further modifications in this layer can be done later like Authorization.\n\n\nconst post = (url, data, config = {}) => {\n  let q = api_instance.post(url, data, config);\n  q.then(res => {}).catch(res => {\n    Cookies.remove('_session'); // window.location.href = \"/\";\n  });\n  return q;\n};\n\nconst get = (url, data = {}, config = {}) => {\n  let q = api_instance.get(url, data, config);\n  q.then(res => {}).catch(res => {\n    Cookies.remove('_session'); // window.location.href = \"/\";\n  });\n  return q;\n};\n\nconst put = (url, data, config = {}) => {\n  return api_instance.put(url, data, config);\n}; //Cannot contain a delete method - Cause delete is a keyword.\n\n\nconst del = (url, config = {}) => {\n  return api_instance.delete(url, config);\n}; //Encapsulating in a JSON object\n\n\nconst HttpClient = {\n  post,\n  get,\n  put,\n  delete: del\n};\nexport { HttpClient };","map":{"version":3,"sources":["/Users/onion9x/Documents/Source Code/f99_warehouse/src/api/lib/httpClient.js"],"names":["axios","Cookies","token","get","obj","api_instance","JSON","parse","create","timeout","withCredentials","headers","access_token","post","url","data","config","q","then","res","catch","remove","put","del","delete","HttpClient"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AACA;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAZ,IAA0BF,OAAO,CAACE,GAAR,CAAY,UAAZ,CAA1B,GAAoD,EAAhE;AACA,IAAIC,GAAJ;AACA,IAAIC,YAAJ;;AAEA,IAAIH,KAAK,IAAI,EAAb,EAAiB;AACbE,EAAAA,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAN;AACAG,EAAAA,YAAY,GAAGL,KAAK,CAACQ,MAAN,CAAa;AACxBC,IAAAA,OAAO,EAAE,MADe;AAExBC,IAAAA,eAAe,EAAG,KAFM;AAGxBC,IAAAA,OAAO,EAAE;AACL,uBAAiBP,GAAG,CAACQ;AADhB;AAHe,GAAb,CAAf;AAOH,CATD,MASK;AACDP,EAAAA,YAAY,GAAGL,KAAK,CAACQ,MAAN,CAAa;AACxBC,IAAAA,OAAO,EAAE,MADe;AAExBC,IAAAA,eAAe,EAAG;AAFM,GAAb,CAAf;AAIH,C,CAKD;;;AAEA,MAAMG,IAAI,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,MAAM,GAAG,EAArB,KAA4B;AACrC,MAAIC,CAAC,GAAGZ,YAAY,CAACQ,IAAb,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,MAA7B,CAAR;AACAC,EAAAA,CAAC,CAACC,IAAF,CAAOC,GAAG,IAAI,CAEb,CAFD,EAEGC,KAFH,CAESD,GAAG,IAAI;AACZlB,IAAAA,OAAO,CAACoB,MAAR,CAAe,UAAf,EADY,CAEZ;AACH,GALD;AAMA,SAAOJ,CAAP;AACH,CATD;;AAWA,MAAMd,GAAG,GAAG,CAACW,GAAD,EAAMC,IAAI,GAAG,EAAb,EAAiBC,MAAM,GAAG,EAA1B,KAAiC;AACzC,MAAIC,CAAC,GAAGZ,YAAY,CAACF,GAAb,CAAiBW,GAAjB,EAAsBC,IAAtB,EAA4BC,MAA5B,CAAR;AACAC,EAAAA,CAAC,CAACC,IAAF,CAAOC,GAAG,IAAI,CAEb,CAFD,EAEGC,KAFH,CAESD,GAAG,IAAI;AACZlB,IAAAA,OAAO,CAACoB,MAAR,CAAe,UAAf,EADY,CAEZ;AACH,GALD;AAMA,SAAOJ,CAAP;AACH,CATD;;AAWA,MAAMK,GAAG,GAAG,CAACR,GAAD,EAAMC,IAAN,EAAYC,MAAM,GAAG,EAArB,KAA4B;AACpC,SAAOX,YAAY,CAACiB,GAAb,CAAiBR,GAAjB,EAAsBC,IAAtB,EAA4BC,MAA5B,CAAP;AACH,CAFD,C,CAIA;;;AAEA,MAAMO,GAAG,GAAG,CAACT,GAAD,EAAME,MAAM,GAAG,EAAf,KAAsB;AAC9B,SAAOX,YAAY,CAACmB,MAAb,CAAoBV,GAApB,EAAyBE,MAAzB,CAAP;AACH,CAFD,C,CAIA;;;AAEA,MAAMS,UAAU,GAAG;AACfZ,EAAAA,IADe;AAEfV,EAAAA,GAFe;AAGfmB,EAAAA,GAHe;AAIfE,EAAAA,MAAM,EAAED;AAJO,CAAnB;AAQA,SAAQE,UAAR","sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie'\n// const query = new URLSearchParams(window.location.search);\n// let token = query.get('access_token');\n\nlet token = Cookies.get('_session') ? Cookies.get('_session') : \"\";\nlet obj;\nlet api_instance;\n\nif (token != \"\") {\n    obj = JSON.parse(token);\n    api_instance = axios.create({\n        timeout: 420000,\n        withCredentials : false,\n        headers: {\n            'Authorization': obj.access_token\n        }\n    });\n}else{\n    api_instance = axios.create({\n        timeout: 420000,\n        withCredentials : false\n    });\n}\n\n\n\n\n//Create a Http Client using Axios. Further modifications in this layer can be done later like Authorization.\n\nconst post = (url, data, config = {}) => {\n    let q = api_instance.post(url, data, config);\n    q.then(res => {\n\n    }).catch(res => {\n        Cookies.remove('_session')\n        // window.location.href = \"/\";\n    })\n    return q;\n}\n\nconst get = (url, data = {}, config = {}) => {\n    let q = api_instance.get(url, data, config);\n    q.then(res => {\n\n    }).catch(res => {\n        Cookies.remove('_session')\n        // window.location.href = \"/\";\n    })\n    return q;\n}\n\nconst put = (url, data, config = {}) => {\n    return api_instance.put(url, data, config);\n}\n\n//Cannot contain a delete method - Cause delete is a keyword.\n\nconst del = (url, config = {}) => {\n    return api_instance.delete(url, config);\n}\n\n//Encapsulating in a JSON object\n\nconst HttpClient = {\n    post,\n    get,\n    put,\n    delete: del\n}\n\n\nexport {HttpClient}\n"]},"metadata":{},"sourceType":"module"}