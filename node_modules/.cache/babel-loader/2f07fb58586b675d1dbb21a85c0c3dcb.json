{"ast":null,"code":"var _jsxFileName = \"/Users/onion9x/Documents/Source Code/f99_warehouse/src/components/site/datatable/index.js\";\nimport React, { Component } from 'react';\nimport Header from './header';\nimport Main from './main';\nimport './style.sass';\nimport { message, Button } from 'antd';\nimport { AppAPI } from '../../../api/appApi';\n\nclass Analytics extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columnState: [{\n        title: '#',\n        width: 90,\n        dataIndex: 'id',\n        key: 'id',\n        fixed: 'left'\n      }],\n      dataSource: [],\n      loading: true,\n      params: []\n    };\n\n    this.updateDataTable = arrayFilter => {\n      let params = arrayFilter;\n      this.setState(prevState => ({\n        params: [...prevState.params, params]\n      }), console.log(this.state.params)); // this.fetchListDataFromAPI(params);\n    };\n\n    this.fetchListDataFromAPI = (params = '') => {\n      this.setState({\n        loading: true\n      });\n      AppAPI.getAllData(params).then(res => {\n        const {\n          data\n        } = res;\n        var stt = 0;\n\n        if (data.success) {\n          data.data.map(res => {\n            stt += 1;\n            let obj = res;\n            this.setState(prevState => ({\n              dataSource: [...prevState.dataSource, obj]\n            }));\n          });\n        }\n      }).finally(res => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.fetchColumn = () => {\n      AppAPI.getAllColumn().then(res => {\n        const {\n          data\n        } = res;\n        var stt = 0;\n\n        if (data.success) {\n          data.data.map(res => {\n            var _res$width, _res$fixed;\n\n            stt += 1;\n            const obj = {\n              title: res.title,\n              dataIndex: res.name,\n              key: res.name,\n              width: (_res$width = res.width) !== null && _res$width !== void 0 ? _res$width : 250,\n              fixed: (_res$fixed = res.fixed) !== null && _res$fixed !== void 0 ? _res$fixed : 'none'\n            };\n\n            if (res.show || typeof res.show == \"undefined\") {\n              this.setState(prevState => ({\n                columnState: [...prevState.columnState, obj]\n              }));\n            }\n          });\n          this.setState({\n            columnState: [...this.state.columnState, {\n              title: 'Chi tiáº¿t',\n              width: 90,\n              dataIndex: 'detail',\n              key: 'detail',\n              fixed: 'right',\n              render: () => /*#__PURE__*/React.createElement(Button, {\n                type: \"primary\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 39\n                }\n              }, \"Xem\")\n            }]\n          });\n        } else {\n          message.error(data.msg);\n        }\n\n        return true;\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchListDataFromAPI();\n    this.fetchColumn();\n  }\n\n  render() {\n    let {\n      loading,\n      dataSource,\n      columnState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      updateDataTable: this.updateDataTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      loading: loading,\n      dataSource: dataSource,\n      columnState: columnState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Analytics;","map":{"version":3,"sources":["/Users/onion9x/Documents/Source Code/f99_warehouse/src/components/site/datatable/index.js"],"names":["React","Component","Header","Main","message","Button","AppAPI","Analytics","state","columnState","title","width","dataIndex","key","fixed","dataSource","loading","params","updateDataTable","arrayFilter","setState","prevState","console","log","fetchListDataFromAPI","getAllData","then","res","data","stt","success","map","obj","finally","fetchColumn","getAllColumn","name","show","render","error","msg","componentDidMount"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport Header from './header';\nimport Main from './main';\nimport './style.sass';\nimport { message, Button } from 'antd';\nimport { AppAPI } from '../../../api/appApi';\n\nclass Analytics extends Component {\n    state = {\n        columnState: [{\n            title: '#',\n            width: 90,\n            dataIndex: 'id',\n            key: 'id',\n            fixed: 'left',\n        }],\n        dataSource: [],\n        loading: true,\n        params: []\n    }\n\n    componentDidMount() {\n        this.fetchListDataFromAPI();\n        this.fetchColumn();\n    }\n\n    render() {\n        let { loading, dataSource, columnState } = this.state;\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <Header updateDataTable={this.updateDataTable} />\n                <Main loading={loading} dataSource={dataSource} columnState={columnState} />\n            </div>\n        );\n    }\n\n    updateDataTable = (arrayFilter) => {\n        let params = arrayFilter;\n\n        this.setState(prevState => ({\n            params: [...prevState.params, params]\n        }), console.log(this.state.params));\n\n        \n\n        // this.fetchListDataFromAPI(params);\n    }\n\n    fetchListDataFromAPI = (params = '') => {\n        this.setState({ loading: true });\n        AppAPI.getAllData(params).then(res => {\n            const { data } = res;\n            var stt = 0;\n            if (data.success) {\n                data.data.map(res => {\n                    stt += 1;\n                    let obj = res;\n                    this.setState(prevState => ({\n                        dataSource: [...prevState.dataSource, obj]\n                    }));\n                });\n            }\n        }).finally(res => {\n            this.setState({ loading: false });\n        })\n    }\n\n    fetchColumn = () => {\n        AppAPI.getAllColumn().then(res => {\n            const { data } = res;\n            var stt = 0;\n            if (data.success) {\n                data.data.map(res => {\n                    stt += 1;\n\n                    const obj = {\n                        title: res.title,\n                        dataIndex: res.name,\n                        key: res.name,\n                        width: res.width ?? 250,\n                        fixed: res.fixed ?? 'none'\n                    };\n\n                    if (res.show || typeof res.show == \"undefined\") {\n                        this.setState(prevState => ({\n                            columnState: [...prevState.columnState, obj]\n                        }));\n                    }\n\n                });\n\n                this.setState({\n                    columnState: [...this.state.columnState, {\n                        title: 'Chi tiáº¿t',\n                        width: 90,\n                        dataIndex: 'detail',\n                        key: 'detail',\n                        fixed: 'right',\n                        render: () => <Button type=\"primary\">Xem</Button>,\n                    }]\n                });\n            } else {\n                message.error(data.msg);\n            }\n            return true;\n        });\n    }\n}\n\nexport default Analytics;"]},"metadata":{},"sourceType":"module"}