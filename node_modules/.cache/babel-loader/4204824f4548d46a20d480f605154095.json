{"ast":null,"code":"var template={};var Global={add:function add(element){var item={key:element.key,value:element.value};template[element.key]=element.value;return this.update(template);},remove:function remove(element){var data=this.init();var index=element.index;data.splice(index,1);for(var i=index;i<=data.length-1;i++){data[i].index=data[i].index-1;}return data;},init:function init(){return template;},update:function update(item){// this.init().push(item);\ntemplate=Object.assign({},item);return this.init();},data:function data(_data){template={'items':_data};}};export default Global;","map":{"version":3,"sources":["/Users/onion9x/Documents/Source Code/f99_warehouse/src/contains/global.js"],"names":["template","Global","add","element","item","key","value","update","remove","data","init","index","splice","i","length","Object","assign"],"mappings":"AACA,GAAIA,CAAAA,QAAQ,CAAG,EAAf,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,GAAG,CAAE,aAAUC,OAAV,CAAmB,CACpB,GAAIC,CAAAA,IAAI,CAAG,CACPC,GAAG,CAAEF,OAAO,CAACE,GADN,CAEPC,KAAK,CAAEH,OAAO,CAACG,KAFR,CAAX,CAIAN,QAAQ,CAACG,OAAO,CAACE,GAAT,CAAR,CAAwBF,OAAO,CAACG,KAAhC,CACA,MAAO,MAAKC,MAAL,CAAYP,QAAZ,CAAP,CACH,CARU,CAUXQ,MAAM,CAAE,gBAAUL,OAAV,CAAmB,CACvB,GAAIM,CAAAA,IAAI,CAAG,KAAKC,IAAL,EAAX,CACA,GAAIC,CAAAA,KAAK,CAAGR,OAAO,CAACQ,KAApB,CACAF,IAAI,CAACG,MAAL,CAAYD,KAAZ,CAAmB,CAAnB,EACA,IAAK,GAAIE,CAAAA,CAAC,CAAGF,KAAb,CAAoBE,CAAC,EAAIJ,IAAI,CAACK,MAAL,CAAc,CAAvC,CAA0CD,CAAC,EAA3C,CAA+C,CAC3CJ,IAAI,CAACI,CAAD,CAAJ,CAAQF,KAAR,CAAgBF,IAAI,CAACI,CAAD,CAAJ,CAAQF,KAAR,CAAgB,CAAhC,CACH,CACD,MAAOF,CAAAA,IAAP,CACH,CAlBU,CAmBXC,IAAI,CAAE,eAAY,CACd,MAAOV,CAAAA,QAAP,CACH,CArBU,CAuBXO,MAAM,CAAE,gBAAUH,IAAV,CAAgB,CACpB;AACAJ,QAAQ,CAAGe,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBZ,IAAlB,CAAX,CACA,MAAO,MAAKM,IAAL,EAAP,CACH,CA3BU,CA6BXD,IAAI,CAAE,cAAUA,KAAV,CAAgB,CAClBT,QAAQ,CAAG,CACP,QAASS,KADF,CAAX,CAGH,CAjCU,CAAf,CAqCA,cAAeR,CAAAA,MAAf","sourcesContent":["\nvar template = {};\n\nconst Global = {\n    add: function (element) {\n        var item = {\n            key: element.key,\n            value: element.value\n        }\n        template[element.key] = element.value;\n        return this.update(template);\n    },\n\n    remove: function (element) {\n        let data = this.init();\n        let index = element.index;\n        data.splice(index, 1);\n        for (var i = index; i <= data.length - 1; i++) {\n            data[i].index = data[i].index - 1;\n        }\n        return data;\n    },\n    init: function () {\n        return template;\n    },\n\n    update: function (item) {\n        // this.init().push(item);\n        template = Object.assign({}, item);\n        return this.init();\n    },\n\n    data: function (data) {\n        template = {\n            'items': data\n        }\n    }\n};\n\n\nexport default Global;\n"]},"metadata":{},"sourceType":"module"}