{"ast":null,"code":"var _jsxFileName = \"/Users/onion9x/Documents/Source Code/f99_warehouse/src/components/site/dashboard/main.js\";\nimport React, { Component } from 'react';\nimport { Table, Spin, message, Popover, Tabs } from 'antd';\nimport { AppAPI } from '../../../api/appApi';\nconst {\n  TabPane\n} = Tabs;\nconst columns = [{\n  title: 'Mã nhân sự',\n  width: 120,\n  dataIndex: 'hrcode',\n  key: 'hrcode',\n  fixed: 'left'\n}, {\n  title: 'Họ và tên',\n  dataIndex: 'fullname',\n  key: 'fullname',\n  width: 250,\n  fixed: 'left'\n}, {\n  title: 'Vị trí công việc',\n  dataIndex: 'level',\n  key: 'level',\n  width: 300\n}];\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      fingerLog: \"\",\n      dataSource: [],\n      prefixName: \"\",\n      columnState: [{\n        title: 'STT',\n        width: 90,\n        dataIndex: 'hrcode',\n        key: 'hrcode',\n        fixed: 'left'\n      }, {\n        title: 'Họ và tên',\n        dataIndex: 'fullname',\n        key: 'fullname',\n        width: 200,\n        fixed: 'left'\n      }, {\n        title: 'Vị trí công việc',\n        dataIndex: 'level',\n        key: 'level',\n        width: 250\n      }]\n    };\n\n    this.fetchListDataFromAPI = () => {\n      AppAPI.getAllData().then(res => {\n        console.log(res);\n      }).finally(res => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.fetchDataFromAPI = () => {// AppAPI.getAllTimeKeeping().then(res => {\n      //     const { data } = res;\n      //     var stt = 0;\n      //     var finger = \"\";\n      //     if (data.success) {\n      //         data.data.map(res => {\n      //             stt += 1;\n      //             var dayStt = 0;\n      //             var department = res.department != null ? res.department.department_name : \"[Không có]\";\n      //             let obj = {\n      //                 stt: stt,\n      //                 fullname: <span className=\"fw-600 fs-15\">{res.name}</span>,\n      //                 hrcode: this.state.prefixName + res.customerInfo.mns,\n      //                 level: res.department != null ? res.department.department_name : \"\" \n      //             };\n      //             res.timekeeping.data.forEach(day => {\n      //                 dayStt += 1;\n      //                 const delay = (\n      //                     day.log.in_out.checkin.delay != 0 ? <span className=\"co-red fw-bold\"> - {day.log.in_out.checkin.delay}</span> : \"\"\n      //                 );\n      //                 const earlier = (\n      //                     day.log.in_out.checkout.earlier != 0 ? <span className=\"co-red fw-bold\"> - {day.log.in_out.checkout.earlier}</span> : \"\"\n      //                 );\n      //                 const content = (\n      //                     <Tabs>\n      //                         <TabPane tab=\"Tổng hợp\" key=\"1\">\n      //                             <div>Công làm việc trong ngày: <span className=\"fw-bold\">{day.log.work}</span></div>\n      //                             <div>Thuộc phòng ban: <span>{department}</span></div>\n      //                             <div>Ca làm việc: <span>Fulltime</span></div>\n      //                             <div>Giờ làm việc: <span>09:00 - 17:30</span></div>\n      //                             <div className=\"fw-bold\">Giờ vào: <span>{day.log.in_out.checkin.time}</span>{day.log.in_out.checkin.delay != 0 && <span className=\"co-red fw-bold\"> - Đi muộn: <span>{day.log.in_out.checkin.delay}</span></span>}</div>\n      //                             <div className=\"fw-bold\">Giờ ra: <span>{day.log.in_out.checkout.time}</span>{day.log.in_out.checkout.earlier != 0 && <span className=\"co-red fw-bold\"> - Về sớm: <span>{day.log.in_out.checkout.earlier}</span></span>}</div>\n      //                         </TabPane>\n      //                         <TabPane tab=\"Chốt vân tay\" key=\"2\">\n      //                             {day.log.fingerprint.map(finger => {\n      //                                 return <div className=\"border-bottom-dashed p-5\">Chấm vân tay lúc: <span className=\"fw-bold co-red\">{finger.datetime_at}</span></div>\n      //                             })}\n      //                         </TabPane>\n      //                         <TabPane tab=\"Đơn từ\" key=\"3\">\n      //                             <span>Không có đơn nào</span>\n      //                         </TabPane>\n      //                         <TabPane tab=\"Phạt\" key=\"4\">\n      //                             <span>Không bị phạt</span>\n      //                         </TabPane>\n      //                     </Tabs>\n      // );\n      //                 const html = (\n      //                     <Popover content={content} placement=\"bottom\" trigger=\"click\" title={res.name.toUpperCase() + \", NGÀY \" + day.day + \"/\" + res.timekeeping.month}>\n      //                         <div className=\"border-bottom-dashed\">{day.log.in_out.checkin.time}{delay}</div>\n      //                         <div className=\"border-bottom-dashed\">{day.log.in_out.checkout.time}{earlier}</div>\n      //                     </Popover>\n      //                 );\n      //                 if (day.off) {\n      //                     obj[dayStt] = <div className=\"text-center co-blue fw-bold\">N</div>;\n      //                 } else {\n      //                     obj[dayStt] = html;\n      //                 }\n      //             });\n      //             this.setState(prevState => ({\n      //                 dataSource: [...prevState.dataSource, obj]\n      //             }));\n      //         });\n      //     } else {\n      //         message.error(data.msg);\n      //     }\n      // }).catch(res => {\n      //     console.log(res.message);\n      // }).finally(res => {\n      //     this.setState({ loading: false });\n      // });\n    };\n\n    this.fetchColumn = () => {\n      AppAPI.getAllColumn().then(res => {\n        const {\n          data\n        } = res;\n\n        if (data.success) {\n          data.data.dayInMonth.map(res => {\n            stt += 1;\n            const obj = {\n              title: res.title,\n              dataIndex: res.name,\n              key: res.name,\n              width: 170\n            };\n            this.setState(prevState => ({\n              columnState: [...prevState.columnState, obj]\n            }));\n          });\n        } else {\n          message.error(data.msg);\n        }\n\n        return true;\n      }).catch(res => {\n        return false;\n      });\n    };\n\n    this.fetchPrefixName = () => {//     AppAPI.getPrefixName().then(res => {\n      //         const { data } = res;\n      //         var stt = 0;\n      //         if (data.success) {\n      //             this.setState({ prefixName: data.data });\n      //         } else {\n      //             message.error(data.msg);\n      //         }\n      //         return true;\n      //     }).catch(res => {\n      //         return false;\n      //     });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchListDataFromAPI();\n    this.fetchColumn();\n  }\n\n  render() {\n    const data = [];\n    const {\n      loading,\n      dataSource,\n      columnState,\n      prefixName\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"main-dashboard main-dashboard--layout overflow-auto flex-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      spinning: loading,\n      tip: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      columns: columnState,\n      dataSource: dataSource,\n      pagination: false,\n      bordered: true,\n      scroll: {\n        x: 1500,\n        y: 'calc(100vh - 179px)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/onion9x/Documents/Source Code/f99_warehouse/src/components/site/dashboard/main.js"],"names":["React","Component","Table","Spin","message","Popover","Tabs","AppAPI","TabPane","columns","title","width","dataIndex","key","fixed","Main","state","loading","fingerLog","dataSource","prefixName","columnState","fetchListDataFromAPI","getAllData","then","res","console","log","finally","setState","fetchDataFromAPI","fetchColumn","getAllColumn","data","success","dayInMonth","map","stt","obj","name","prevState","error","msg","catch","fetchPrefixName","componentDidMount","render","x","y"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\n\nimport { Table, Spin, message, Popover, Tabs } from 'antd';\nimport { AppAPI } from '../../../api/appApi';\n\nconst { TabPane } = Tabs;\nconst columns = [\n    {\n        title: 'Mã nhân sự',\n        width: 120,\n        dataIndex: 'hrcode',\n        key: 'hrcode',\n        fixed: 'left',\n    },\n    {\n        title: 'Họ và tên',\n        dataIndex: 'fullname',\n        key: 'fullname',\n        width: 250,\n        fixed: 'left',\n    },\n    {\n        title: 'Vị trí công việc',\n        dataIndex: 'level',\n        key: 'level',\n        width: 300,\n    }\n];\n\nclass Main extends Component {\n    state = {\n        loading: true,\n        fingerLog: \"\",\n        dataSource: [],\n        prefixName: \"\",\n        columnState: [\n            {\n                title: 'STT',\n                width: 90,\n                dataIndex: 'hrcode',\n                key: 'hrcode',\n                fixed: 'left',\n            },\n            {\n                title: 'Họ và tên',\n                dataIndex: 'fullname',\n                key: 'fullname',\n                width: 200,\n                fixed: 'left',\n            },\n            {\n                title: 'Vị trí công việc',\n                dataIndex: 'level',\n                key: 'level',\n                width: 250\n            }]\n    }\n    componentDidMount() {\n        this.fetchListDataFromAPI();\n        this.fetchColumn();\n    }\n\n    render() {\n        const data = [];\n        const { loading, dataSource, columnState, prefixName } = this.state;\n\n        return (\n            <section className=\"main-dashboard main-dashboard--layout overflow-auto flex-1\">\n                <Spin spinning={loading} tip=\"Đang tải dữ liệu\">\n                    <Table columns={columnState} dataSource={dataSource} pagination={false} bordered scroll={{ x: 1500, y: 'calc(100vh - 179px)' }} \n                        \n                    />\n                </Spin>\n            </section>\n        );\n    }\n\n    fetchListDataFromAPI = () => {\n        AppAPI.getAllData().then(res => {\n            console.log(res);\n        }).finally(res => {\n            this.setState({ loading: false });\n        })\n    }\n\n    fetchDataFromAPI = () => {\n        // AppAPI.getAllTimeKeeping().then(res => {\n        //     const { data } = res;\n        //     var stt = 0;\n        //     var finger = \"\";\n        //     if (data.success) {\n        //         data.data.map(res => {\n        //             stt += 1;\n        //             var dayStt = 0;\n        //             var department = res.department != null ? res.department.department_name : \"[Không có]\";\n        //             let obj = {\n        //                 stt: stt,\n        //                 fullname: <span className=\"fw-600 fs-15\">{res.name}</span>,\n        //                 hrcode: this.state.prefixName + res.customerInfo.mns,\n        //                 level: res.department != null ? res.department.department_name : \"\" \n        //             };\n\n        //             res.timekeeping.data.forEach(day => {\n        //                 dayStt += 1;\n        //                 const delay = (\n        //                     day.log.in_out.checkin.delay != 0 ? <span className=\"co-red fw-bold\"> - {day.log.in_out.checkin.delay}</span> : \"\"\n        //                 );\n        //                 const earlier = (\n        //                     day.log.in_out.checkout.earlier != 0 ? <span className=\"co-red fw-bold\"> - {day.log.in_out.checkout.earlier}</span> : \"\"\n        //                 );\n\n        //                 const content = (\n        //                     <Tabs>\n        //                         <TabPane tab=\"Tổng hợp\" key=\"1\">\n        //                             <div>Công làm việc trong ngày: <span className=\"fw-bold\">{day.log.work}</span></div>\n        //                             <div>Thuộc phòng ban: <span>{department}</span></div>\n        //                             <div>Ca làm việc: <span>Fulltime</span></div>\n        //                             <div>Giờ làm việc: <span>09:00 - 17:30</span></div>\n        //                             <div className=\"fw-bold\">Giờ vào: <span>{day.log.in_out.checkin.time}</span>{day.log.in_out.checkin.delay != 0 && <span className=\"co-red fw-bold\"> - Đi muộn: <span>{day.log.in_out.checkin.delay}</span></span>}</div>\n        //                             <div className=\"fw-bold\">Giờ ra: <span>{day.log.in_out.checkout.time}</span>{day.log.in_out.checkout.earlier != 0 && <span className=\"co-red fw-bold\"> - Về sớm: <span>{day.log.in_out.checkout.earlier}</span></span>}</div>\n        //                         </TabPane>\n        //                         <TabPane tab=\"Chốt vân tay\" key=\"2\">\n        //                             {day.log.fingerprint.map(finger => {\n        //                                 return <div className=\"border-bottom-dashed p-5\">Chấm vân tay lúc: <span className=\"fw-bold co-red\">{finger.datetime_at}</span></div>\n        //                             })}\n        //                         </TabPane>\n        //                         <TabPane tab=\"Đơn từ\" key=\"3\">\n        //                             <span>Không có đơn nào</span>\n        //                         </TabPane>\n        //                         <TabPane tab=\"Phạt\" key=\"4\">\n        //                             <span>Không bị phạt</span>\n        //                         </TabPane>\n        //                     </Tabs>\n                        // );\n\n\n        //                 const html = (\n        //                     <Popover content={content} placement=\"bottom\" trigger=\"click\" title={res.name.toUpperCase() + \", NGÀY \" + day.day + \"/\" + res.timekeeping.month}>\n        //                         <div className=\"border-bottom-dashed\">{day.log.in_out.checkin.time}{delay}</div>\n        //                         <div className=\"border-bottom-dashed\">{day.log.in_out.checkout.time}{earlier}</div>\n        //                     </Popover>\n        //                 );\n\n        //                 if (day.off) {\n        //                     obj[dayStt] = <div className=\"text-center co-blue fw-bold\">N</div>;\n        //                 } else {\n        //                     obj[dayStt] = html;\n        //                 }\n\n\n        //             });\n\n\n        //             this.setState(prevState => ({\n        //                 dataSource: [...prevState.dataSource, obj]\n        //             }));\n        //         });\n        //     } else {\n        //         message.error(data.msg);\n        //     }\n        // }).catch(res => {\n        //     console.log(res.message);\n        // }).finally(res => {\n        //     this.setState({ loading: false });\n        // });\n    }\n\n    fetchColumn = () => {\n        AppAPI.getAllColumn().then(res => {\n            const { data } = res;\n            if (data.success) {\n                data.data.dayInMonth.map(res => {\n                    stt += 1;\n                    const obj = {\n                        title: res.title,\n                        dataIndex: res.name,\n                        key: res.name,\n                        width: 170,\n                    };\n                    this.setState(prevState => ({\n                        columnState: [...prevState.columnState, obj]\n                    }));\n                });\n            } else {\n                message.error(data.msg);\n            }\n            return true;\n        }).catch(res => {\n            return false;\n        });\n    }\n\n    fetchPrefixName = () => {\n    //     AppAPI.getPrefixName().then(res => {\n    //         const { data } = res;\n    //         var stt = 0;\n    //         if (data.success) {\n    //             this.setState({ prefixName: data.data });\n    //         } else {\n    //             message.error(data.msg);\n    //         }\n    //         return true;\n    //     }).catch(res => {\n    //         return false;\n    //     });\n    }\n}\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}