{"ast":null,"code":"import{HttpClient}from'./lib/httpClient';var TYPE=process.env.NODE_ENV;var BASE_URL_LIVE=process.env.REACT_APP_BASE_URL;var BASE_URL_DEV=process.env.REACT_APP_BASE_URL_DEV;var BASE_PRODUCT_VERSION=process.env.REACT_APP_VERSION;var BASE_URL=TYPE===\"development\"?BASE_URL_DEV:BASE_URL_LIVE;var getAllPage=function getAllPage(token){return HttpClient.get(\"\".concat(BASE_URL,\"/api/get/fanpage?token=\")+token);};var getAllData=function getAllData(params,page){return HttpClient.post(\"\".concat(BASE_URL,\"/api/v1/filterAllData?page=\")+page,params);};var getAllColumn=function getAllColumn(){return HttpClient.get(\"\".concat(BASE_URL,\"/api/v1/getColumnTable\"));};var saveCollection=function saveCollection(params){return HttpClient.post(\"\".concat(BASE_URL,\"/api/v1/saveCollection\"),params);};var getCollection=function getCollection(){return HttpClient.get(\"\".concat(BASE_URL,\"/api/v1/getCollection\"));};var getDetailCollection=function getDetailCollection(){var id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";return HttpClient.get(\"\".concat(BASE_URL,\"/api/v1/detailCollection?_id=\")+id);};var getLogData=function getLogData(){var id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";return HttpClient.get(\"\".concat(BASE_URL,\"/api/v1/GetLog?id=\")+id);};var createLogData=function createLogData(params){return HttpClient.post(\"\".concat(BASE_URL,\"/api/v1/CreateLog\"),params);};var AppAPI={BASE_URL:BASE_URL,BASE_PRODUCT_VERSION:BASE_PRODUCT_VERSION,getAllData:getAllData,getAllColumn:getAllColumn,saveCollection:saveCollection,getCollection:getCollection,getDetailCollection:getDetailCollection,getLogData:getLogData,createLogData:createLogData};export{AppAPI};","map":{"version":3,"sources":["/Users/onion9x/Documents/Source Code/f99_warehouse/src/api/appApi.js"],"names":["HttpClient","TYPE","process","env","NODE_ENV","BASE_URL_LIVE","REACT_APP_BASE_URL","BASE_URL_DEV","REACT_APP_BASE_URL_DEV","BASE_PRODUCT_VERSION","REACT_APP_VERSION","BASE_URL","getAllPage","token","get","getAllData","params","page","post","getAllColumn","saveCollection","getCollection","getDetailCollection","id","getLogData","createLogData","AppAPI"],"mappings":"AAAA,OAASA,UAAT,KAA2B,kBAA3B,CAGA,GAAMC,CAAAA,IAAI,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAzB,CACA,GAAMC,CAAAA,aAAa,CAAGH,OAAO,CAACC,GAAR,CAAYG,kBAAlC,CACA,GAAMC,CAAAA,YAAY,CAAGL,OAAO,CAACC,GAAR,CAAYK,sBAAjC,CACA,GAAMC,CAAAA,oBAAoB,CAAGP,OAAO,CAACC,GAAR,CAAYO,iBAAzC,CACA,GAAMC,CAAAA,QAAQ,CAAGV,IAAI,GAAK,aAAT,CAAyBM,YAAzB,CAAwCF,aAAzD,CAEA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,MAAOb,CAAAA,UAAU,CAACc,GAAX,CAAe,UAAGH,QAAH,4BAAuCE,KAAtD,CAAP,CACH,CAFD,CAIA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASC,IAAT,CAAkB,CACjC,MAAOjB,CAAAA,UAAU,CAACkB,IAAX,CAAgB,UAAGP,QAAH,gCAA2CM,IAA3D,CAAiED,MAAjE,CAAP,CACH,CAFD,CAIA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,MAAOnB,CAAAA,UAAU,CAACc,GAAX,WAAkBH,QAAlB,2BAAP,CACH,CAFD,CAIA,GAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACJ,MAAD,CAAY,CAC/B,MAAOhB,CAAAA,UAAU,CAACkB,IAAX,WAAmBP,QAAnB,2BAAqDK,MAArD,CAAP,CACH,CAFD,CAIA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,MAAOrB,CAAAA,UAAU,CAACc,GAAX,WAAkBH,QAAlB,0BAAP,CACH,CAFD,CAIA,GAAMW,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAa,IAAZC,CAAAA,EAAY,2DAAP,EAAO,CACrC,MAAOvB,CAAAA,UAAU,CAACc,GAAX,CAAe,UAAGH,QAAH,kCAA6CY,EAA5D,CAAP,CACH,CAFD,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAa,IAAZD,CAAAA,EAAY,2DAAP,EAAO,CAC5B,MAAOvB,CAAAA,UAAU,CAACc,GAAX,CAAe,UAAGH,QAAH,uBAAkCY,EAAjD,CAAP,CACH,CAFD,CAIA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACT,MAAD,CAAY,CAC9B,MAAOhB,CAAAA,UAAU,CAACkB,IAAX,WAAmBP,QAAnB,sBAAgDK,MAAhD,CAAP,CACH,CAFD,CAKA,GAAMU,CAAAA,MAAM,CAAG,CACXf,QAAQ,CAARA,QADW,CAEXF,oBAAoB,CAApBA,oBAFW,CAGXM,UAAU,CAAVA,UAHW,CAIXI,YAAY,CAAZA,YAJW,CAKXC,cAAc,CAAdA,cALW,CAMXC,aAAa,CAAbA,aANW,CAOXC,mBAAmB,CAAnBA,mBAPW,CAQXE,UAAU,CAAVA,UARW,CASXC,aAAa,CAAbA,aATW,CAAf,CAYA,OAASC,MAAT","sourcesContent":["import { HttpClient } from './lib/httpClient';\n\n\nconst TYPE = process.env.NODE_ENV;\nconst BASE_URL_LIVE = process.env.REACT_APP_BASE_URL;\nconst BASE_URL_DEV = process.env.REACT_APP_BASE_URL_DEV;\nconst BASE_PRODUCT_VERSION = process.env.REACT_APP_VERSION;\nconst BASE_URL = TYPE === \"development\" ? BASE_URL_DEV : BASE_URL_LIVE;\n\nconst getAllPage = (token) => {\n    return HttpClient.get(`${BASE_URL}/api/get/fanpage?token=` + token);\n}\n\nconst getAllData = (params, page) => {\n    return HttpClient.post(`${BASE_URL}/api/v1/filterAllData?page=` + page, params);\n}\n\nconst getAllColumn = () => {\n    return HttpClient.get(`${BASE_URL}/api/v1/getColumnTable`);\n}\n\nconst saveCollection = (params) => {\n    return HttpClient.post(`${BASE_URL}/api/v1/saveCollection`, params);\n}\n\nconst getCollection = () => {\n    return HttpClient.get(`${BASE_URL}/api/v1/getCollection`);\n}\n\nconst getDetailCollection = (id = \"\") => {\n    return HttpClient.get(`${BASE_URL}/api/v1/detailCollection?_id=` + id);\n}\n\nconst getLogData = (id = \"\") => {\n    return HttpClient.get(`${BASE_URL}/api/v1/GetLog?id=` + id);\n}\n\nconst createLogData = (params) => {\n    return HttpClient.post(`${BASE_URL}/api/v1/CreateLog`, params);\n}\n\n\nconst AppAPI = {\n    BASE_URL,\n    BASE_PRODUCT_VERSION,\n    getAllData,\n    getAllColumn,\n    saveCollection,\n    getCollection,\n    getDetailCollection,\n    getLogData,\n    createLogData\n};\n\nexport { AppAPI };\n"]},"metadata":{},"sourceType":"module"}