{"ast":null,"code":"var _jsxFileName = \"/Users/onion9x/Documents/Source Code/f99_warehouse/src/components/site/datatable/index.js\";\nimport React, { Component } from 'react';\nimport Header from './header';\nimport Main from './main';\nimport './style.sass';\nimport { message, Button } from 'antd';\nimport { AppAPI } from '../../../api/appApi';\n\nclass Analytics extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columnState: [],\n      dataSource: []\n    };\n\n    this.fetchListDataFromAPI = () => {\n      AppAPI.getAllData().then(res => {\n        const {\n          data\n        } = res;\n        var stt = 0;\n\n        if (data.success) {\n          data.data.map(res => {\n            stt += 1;\n            let obj = res;\n            this.setState(prevState => ({\n              dataSource: [...prevState.dataSource, obj]\n            }));\n          });\n        }\n      }).finally(res => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.fetchColumn = () => {\n      AppAPI.getAllColumn().then(res => {\n        const {\n          data\n        } = res;\n        var stt = 0;\n\n        if (data.success) {\n          data.data.map(res => {\n            var _res$width, _res$fixed;\n\n            stt += 1;\n            const obj = {\n              title: res.title,\n              dataIndex: res.name,\n              key: res.name,\n              width: (_res$width = res.width) !== null && _res$width !== void 0 ? _res$width : 250,\n              fixed: (_res$fixed = res.fixed) !== null && _res$fixed !== void 0 ? _res$fixed : 'none'\n            };\n\n            if (res.show || typeof res.show == \"undefined\") {\n              this.setState(prevState => ({\n                columnState: [...prevState.columnState, obj]\n              }));\n            }\n          });\n          this.setState({\n            columnState: [...this.state.columnState, {\n              title: 'Chi tiết',\n              width: 90,\n              dataIndex: 'detail',\n              key: 'detail',\n              fixed: 'right',\n              render: () => /*#__PURE__*/React.createElement(Button, {\n                type: \"primary\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 39\n                }\n              }, \"Xem\")\n            }]\n          });\n        } else {\n          message.error(data.msg);\n        }\n\n        return true;\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchListDataFromAPI();\n    this.fetchColumn();\n  }\n\n  render() {\n    let {\n      dataSource,\n      columnState\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      updateDataTable: this.props.updateDataTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      dataSource: dataSource,\n      columnState: columnState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Analytics;","map":{"version":3,"sources":["/Users/onion9x/Documents/Source Code/f99_warehouse/src/components/site/datatable/index.js"],"names":["React","Component","Header","Main","message","Button","AppAPI","Analytics","state","columnState","dataSource","fetchListDataFromAPI","getAllData","then","res","data","stt","success","map","obj","setState","prevState","finally","loading","fetchColumn","getAllColumn","title","dataIndex","name","key","width","fixed","show","render","error","msg","componentDidMount","props","updateDataTable"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport Header from './header';\nimport Main from './main';\nimport './style.sass';\nimport { message, Button } from 'antd';\nimport { AppAPI } from '../../../api/appApi';\n\nclass Analytics extends Component {\n    state = {\n        columnState: [],\n        dataSource: []\n    }\n\n    componentDidMount() {\n        this.fetchListDataFromAPI();\n        this.fetchColumn();\n    }\n\n    render() {\n        let { dataSource, columnState } = this.state;\n        return (\n            <div className=\"d-flex flex-column h-100\">\n                <Header updateDataTable={this.props.updateDataTable} />\n                <Main dataSource={dataSource} columnState={columnState} />\n            </div>\n        );\n    }\n\n    fetchListDataFromAPI = () => {\n        AppAPI.getAllData().then(res => {\n            const { data } = res;\n            var stt = 0;\n            if (data.success) {\n                data.data.map(res => {\n                    stt += 1;\n                    let obj = res;\n                    this.setState(prevState => ({\n                        dataSource: [...prevState.dataSource, obj]\n                    }));\n                });\n            }\n        }).finally(res => {\n            this.setState({ loading: false });\n        })\n    }\n\n    fetchColumn = () => {\n        AppAPI.getAllColumn().then(res => {\n            const { data } = res;\n            var stt = 0;\n            if (data.success) {\n                data.data.map(res => {\n                    stt += 1;\n\n                    const obj = {\n                        title: res.title,\n                        dataIndex: res.name,\n                        key: res.name,\n                        width: res.width ?? 250,\n                        fixed: res.fixed ?? 'none'\n                    };\n\n                    if (res.show || typeof res.show == \"undefined\") {\n                        this.setState(prevState => ({\n                            columnState: [...prevState.columnState, obj]\n                        }));\n                    }\n\n                });\n\n                this.setState({\n                    columnState: [...this.state.columnState, {\n                        title: 'Chi tiết',\n                        width: 90,\n                        dataIndex: 'detail',\n                        key: 'detail',\n                        fixed: 'right',\n                        render: () => <Button type=\"primary\">Xem</Button>,\n                    }]\n                });\n            } else {\n                message.error(data.msg);\n            }\n            return true;\n        });\n    }\n}\n\nexport default Analytics;"]},"metadata":{},"sourceType":"module"}